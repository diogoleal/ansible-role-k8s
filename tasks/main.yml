---
# tasks file for k8s

- name: Disabled swap
  ansible.builtin.shell:
    cmd: swapoff -a

- name: Add repository
  ansible.builtin.yum_repository:
    name: docker-ce-stable
    description: docker-ce-stable
    baseurl: https://download.docker.com/linux/centos/$releasever/$basearch/stable
    enabled: true
    gpgcheck: true
    gpgkey: https://download.docker.com/linux/centos/gpg

- name: install runc and containerd package
  ansible.builtin.yum:
    name:
    - runc
    - containerd
    state: present

- name: kubernets repository
  template:
    src: kubernetes.repo.j2
    dest: /etc/yum.repos.d/kubernetes.repo
    owner: root
    group: root

- name: install kubernetes packages
  ansible.builtin.yum:
    name:
    - kubelet
    - kubeadm
    - kubectl
    state: present

- name: enable kubelet service
  ansible.builtin.systemd_service:
    state: started
    name: kubelet
    # enabled: true

- name: cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
  template:
    src: k8s_modules_conf.j2
    dest: /etc/modules-load.d/k8s.conf
    owner: root
    group: root

- name: modprobe overlay
  community.general.modprobe:
    name: overlay
    state: present

- name: modprobe br_netfilter
  community.general.modprobe:
    name: br_netfilter
    state: present

# sysctl params required by setup, params persist across reboots

# - name: cat <<EOF | tee /etc/sysctl.d/k8s.conf
#   template:
#     src: k8s_modules_conf.j2
#     dest: /etc/sysctl.d/k8s.conf
#     owner: root
#     group: root
#     # mode: 0755

- ansible.posix.sysctl:
    name: net.bridge.bridge-nf-call-iptables
    value: '1'
    sysctl_set: true
    state: present
    reload: true

- ansible.posix.sysctl:
    name: net.bridge.bridge-nf-call-iptables
    value: '1'
    sysctl_set: true
    state: present
    reload: true

- ansible.posix.sysctl:
    name: net.ipv4.ip_forward
    value: '1'
    sysctl_set: true
    state: present
    reload: true

# sudo firewall-cmd --permanent --add-port=6443/tcp
# sudo firewall-cmd --permanent --add-port=2379-2380/tcp
# sudo firewall-cmd --permanent --add-port=10250/tcp
# sudo firewall-cmd --permanent --add-port=10251/tcp
# sudo firewall-cmd --permanent --add-port=10259/tcp
# sudo firewall-cmd --permanent --add-port=10257/tcp
# sudo firewall-cmd --permanent --add-port=179/tcp
# sudo firewall-cmd --permanent --add-port=4789/udp

- name: open ports 2379-2380/tcp
  ansible.posix.firewalld:
    port: 2379-2380/tcp
    permanent: true
    state: enabled

- name: open ports 6443/tcp
  ansible.posix.firewalld:
    port: 6443/tcp
    permanent: true
    state: enabled

- name: open ports 10250-10255/tcp
  ansible.posix.firewalld:
    port: 10250-10255/tcp
    permanent: true
    state: enabled

- name: open ports 8472/udp
  ansible.posix.firewalld:
    port: 8472/udp
    permanent: true
    state: enabled

- name: enable masquerade
  ansible.posix.firewalld:
    masquerade: true
    state: enabled
    permanent: true

- name: restart firewalld
  ansible.builtin.systemd_service:
    name: firewalld
    state: restarted
    enabled: true

- name: delete file /etc/containerd/config.toml
  ansible.builtin.file:
    path: /etc/containerd/config.toml
    state: absent

- name: create containerd/config.toml
  ansible.builtin.shell:
    cmd: containerd config default > /etc/containerd/config.toml

- name: Replace a value to SystemdCgroup
  ansible.builtin.lineinfile:
    path: /etc/containerd/config.toml
    search_string: 'SystemdCgroup = false'
    line: SystemdCgroup = true

- name: start containerd
  ansible.builtin.systemd_service:
    name: containerd
    state: started
    enabled: true

- name: start and enable kubelet
  ansible.builtin.systemd_service:
    name: kubelet
    state: started
    enabled: true

- name: kubeadmin init
  ansible.builtin.shell:
    cmd: kubeadm init --kubernetes-version=latest
